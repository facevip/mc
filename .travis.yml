language: go
go_import_path: github.com/33cn/plugin
os: linux
dist: xenial
notifications:
  email: false
jobs:
  include:
    - stage: check_fmt
      sudo: require
      go: "1.9.x"
      install:
        - go get -u golang.org/x/tools/cmd/goimports
#        - go get -u gopkg.in/alecthomas/gometalinter.v2
#        - gometalinter.v2 -i
        - go get -u mvdan.cc/sh/cmd/shfmt
        - go get -u mvdan.cc/sh/cmd/gosh
      script:
        - make fmt_go
      after_success:
      - "./travis_auto_ci.sh"
#        - make fmt_go
#        - make checkgofmt && make fmt_go
#        - make linter

#    - stage: unit-test
#      go: "1.9.x"
#      install: skip
#      script:
#        - make test

#    - stage: coverage
#      if: branch = master
#      go: "1.9.x"
#      before_install:
#        - go get -t -v ./...
#      install: skip
#      script:
#        - make coverage
#      after_success:
#        - bash <(curl -s https://codecov.io/bash)


#    - stage: deploy
#      sudo: required
#      services:
#        - docker
#      env:
#        - DOCKER_COMPOSE_VERSION=1.21.2
#      install:
#        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
#        - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
#        - sudo apt-get update
#        - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
#        - sudo rm /usr/local/bin/docker-compose
#        - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
#        - chmod +x docker-compose
#        - sudo mv docker-compose /usr/local/bin
#      before_script: make build_ci
#      script:
##        - make docker-compose && make docker-compose-down && make docker-compose DAPP=paracross && make docker-compose-down DAPP=paracross && make docker-compose DAPP=relay && make docker-compose-down DAPP=relay
#        - make docker-compose DAPP=all && make docker-compose-down DAPP=all && make clean
env:
  global:
#  - secure: IjFjd0RRt5F+Zci7hGcrceFaajhh6sicQOqmHXceQGvS2zYNZ6C9O8xHz+ty/w6Ok3mJEb/HUVzTp2aKCQr7w4CBeHCbGBJsA1g7u9WK4zis+JEEs66CK4kJvwzWZyDSdhW8RRYP7K9TA8MXTTXEggJgBBl0urj+CA4/bc227ZiH1sD5h27DV2hFyYqIbg8qtgrWiOLDvfQJKY6ZxR9x1wHDpXQupr02AJOUMJMSGjpPvVlNj3TewHVblUn52DBDTUuNFJIMrh5AjNR/nSEnwG7v8YqvIbE4NHUK+mjhLktMmFBsm/Z5npqRYa+YIDih7aKD6aDmJ9iZBx6m1PrBWaygWTmOpV4mee8lJRygM5QRTbVBquIiBECuuGW1gyA/FrC+6wTKda2seehV2aWWMPc6sYXjvifDsoXOsV02ZO1E9+mhhDgz8W1hHxVzBTVkYWpqzir8Wstec1QZ6sOA5N/ndCLlGOi1rWcm6XlzEo8BDV8G3sOI8YsDK8PB2rPsd7MRkMKuoQe9eYsLz4KQyKv1WGBC/FCUeD9tHeZR9YWk/kr0g6Mjk4Ze/HESygTFSs57010o1Ce5dibrSV84oqQJl14A6rLPGzC8z0WaEze9QIjO4huveON+8eDtHo4uWveMQZ6qlAaVu212M96i5M+XemS8Vr+OcnyHKDz9Vbw=
  - secure: pW+LQlvdftvCa1cqPDtEsnTzmGzPViVbC5RIiOhzZnQc9OFPTstBolcqhCcVSGidZnZD0w/Z4Ga1mgeKX5ytLatgok8VsSdRJPM0Uejae15zGyEvMj+HTzCh4jz0ecWmGCn3ngk/84iVQB6IDVYtrMn4yZVJfm0W9GA407jgnVz4rfsrfE4F7a1uLUkjUwiw1NHdYcGH0l29FWaahgWqdBADx9eJ5RhlSlT7nGnj4wTblvyPaJskH9VXp9EmEoF1oChxdPZH/ttJRdI0EfexTnhoja2XlskrBqTf8+AJVDYtBG4BI7fOUkvGmVWLgL2LNLKZVRhjJmTnyUghvvK1TrjXnAaIMJLAWLUjRFme4mb1yRs001HfKgmTeFFf4pToR31DMvysIJQzI3n4H2mUxPXFWQnZatB0RX5hczM/c/HaZvjEzBwu0QUlQkP4AJfAxMoEdtckkbedPe/sivyrcaFNLtSEDiHLc1fTFEGe1eKGI8AeVy9AJ/D6iZ0a9d/UDle3QJATXQ3iXdSwTs0g9apP+sX2lAwRXLuVEevExvt9M6E7EMcrdedDdJFK0cAcI3lAUcNbce8dxYvFkeAQspf9/0s2OpSNScObkOy8x7xAyPpMlRqRvPRMHdisO+Ya7Zd8/RcBhpu482Og8KGnzf7qXvMH/qW08704J71cE2o=
